{"version":3,"sources":["scripts.min.js"],"names":["symbols","actions","main","document","xhr","XMLHttpRequest","open","getActions","symbol","apikey","status","result","send","resultMeta","resultsDetails","resultsTimes","latestResult","push","resultHight","resultOpen","resultClose","resultVolume","resultSymbol","resultRefreshed","insertAdjacentHTML","resultLow","startAjax","onreadystatechange","parse","response","console","querySelector","forEach","name"],"mappings":"cAAA,WAGE,SAAMA,EAAWC,GACjB,IAAIC,EAAOC,EAILC,EAAM,IAAIC,eAFhBD,EAAAE,KAASC,MAAAA,uEAAoBC,EAAA,cAAAC,EAAA,kBAC3BL,EAAII,mBAAJ,WACcH,IAAVD,EAAAA,aACY,MAAZE,EAAKI,OASR,SARDC,GASAP,IAAIQ,EAAJD,EAAA,uBACDE,EAAAF,EAAA,aACDG,KACE,IAAIC,KAAAA,EACJD,EAAiBH,KAAAA,EAAAA,IAEjB,IAAAK,EAAeD,EAAc,GAC3BD,EAAeG,EAAKF,WACrBG,EAAAF,EAAA,WACGA,EAAAA,EAAeF,UACfK,EAAaH,EAAa,YAC1BE,EAAcF,EAAa,aAE3BI,EAAcJ,EAAAA,aACdK,EAAeL,EAAa,qBAE5BM,EAAAA,qFAC6BA,EAD7BA,yEAKwDC,EALxDD,4EAOgBH,EAPhBG,iCAeCE,EAfDF,+BAiBLG,EAjBKH,iCAkBcF,EAlBdE,kCAmBYD,EAnBZC,yCAuBNI,EAAAA,mBAAAA,YAAAA,GAhDMC,CAAAA,KAAJC,MAAyBxB,EAAAyB,WAErBC,QAAOpB,IAAJ,gBAIFN,EAAAQ,OAhBR,IAAAH,EAAU,mBACTT,GAAA,QAAA,SAAA,SAGIE,EAAOC,SAAS4B,cAAc,SAkDhC/B,EAAQgC,QAAQ,SAASC,GACvB1B,EAAW0B,KAvDjB","file":"scripts.min.js","sourcesContent":["(function(){\n  'use strict';\n  const apikey = 'JC86LIY595WFPL8F';\n  const symbols = ['SLED4', 'PIBB11', 'NATU3'];\n  let main = document.querySelector('.main');\n\n  function getActions(actions) {\n    var symbol = actions;\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=' + symbol + '.SA&apikey=' + apikey + '&datatype=json');\n    xhr.onreadystatechange = () => {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200){\n          viewActions(JSON.parse(xhr.response));\n        }else{\n          console.log('deu errado');\n        }\n      }\n    }\n    xhr.send();\n  }\n  function viewActions(result){\n    let resultsTimes = result[\"Time Series (Daily)\"];\n    let resultMeta = result[\"Meta Data\"];\n    let resultsDetails = [];\n    for (result in resultsTimes) {\n      resultsDetails.push(resultsTimes[result]);\n    }\n    let latestResult = resultsDetails[0];\n    let resultOpen = latestResult[\"1. open\"];\n    let resultHight = latestResult[\"2. high\"];\n    let resultLow = latestResult[\"3. low\"];\n    let resultClose = latestResult[\"4. close\"];\n    let resultVolume = latestResult[\"5. volume\"];\n\n    let resultSymbol = resultMeta[\"2. Symbol\"];\n    let resultRefreshed = resultMeta[\"3. Last Refreshed\"];\n    \n    let viewHTML = `<section class=\"box-actions\">\n          <div class=\"box-actions--symbol\">Symbol: ${resultSymbol}</div>\n          <div class=\"box-actions--refreshed\">Last Refreshed: ${resultRefreshed}</div>\n          <ul class=box--actions--values>\n            <li>Open: ${resultOpen}</li>\n            <li>Hight: ${resultHight}</li>\n            <li>Low: ${resultLow}</li>\n            <li>Close: ${resultClose}</li>\n            <li>Volume: ${resultVolume}</li>\n          </ul>\n        </div>`;\n    \n    main.insertAdjacentHTML('beforeend', viewHTML);\n    \n  }\n  function startAjax(){\n    symbols.forEach(function(name){\n      getActions(name);\n    });\n  }\n  startAjax();\n})();\n"]}