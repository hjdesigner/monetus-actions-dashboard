{"version":3,"sources":["scripts.min.js"],"names":["apikey","actions","actionsLi","xhr","XMLHttpRequest","symbol","readyState","open","status","result","resultsTimes","resultMeta","viewActions","positiveOrNegativeClass","resultsDetails","push","latestResult","resultHight","resultOpen","resultLow","resultVolume","resultRefreshed","resultSymbol","parseFloat","toFixed","insertAdjacentHTML","resultClose","getActions","getAttribute","viewHTML","closeDay","valueCloseDay","getActionsClosePreviousDay","porcetagem","resultsDaily","resultFinish","oldResult","newResult","porcetagemFinish","Math","round","numberIsPositive","sign","document","querySelector","replace","classList","add","onreadystatechange","JSON","parse","response","console","send","querySelectorAll","forEach","item","index"],"mappings":"cAAA,WAEE,SAAMA,EAASC,GACf,IAAMC,EAAAA,EAIEC,EAAM,IAAIC,eADhBD,EAAIE,KAAAA,MAAJ,0EAAAA,EAAA,yBAAAL,EAAA,kBACAG,EAAMA,mBAAUC,WAIQ,IAAnBD,EAAIG,aAFT,MAAIC,EAAKC,OAgEV,SAAAC,GAGC,IAAIC,EAAeD,EAAO,sBAD5BE,EAASC,EAAYH,aACfC,KAKJ,IAAIG,KAAAA,EAGFC,EAAeC,KAAKL,EAAaD,IAAjCK,IAAAA,EAAeC,EAAKL,GAElBM,EAAAA,EAAeF,WAGfG,EAAcD,EAAa,WAD3BE,EAAAA,EAAaF,UACbC,EAAcD,EAAa,YAC3BG,EAAYH,EAAa,aAEzBI,EAAeJ,EAAAA,aAGfK,EAAkBV,EAAW,qBAA7BU,EAAAA,wDAAJC,EAAID,oIAGqEA,EAHrEA,wFAK6BE,WAAWL,GAAYM,QAAQ,GAL5DH,8CAYmBE,WAAkBD,GAAcE,QAAMC,GAZzDJ,8CAO8BE,WAAWN,GAAaO,QAAQ,GAP9DH,4CAcuBC,WAAcI,GAAzCF,QAAA,GAdIH,+CAgBLE,WAAAH,GAAAI,QAAA,GAhBKH,yBAmBFM,SAAAA,cAAgBC,iBAAaN,EAA7B,MAAAG,mBAAA,YAAAI,GA/FF1B,SAAAF,EAAA6B,GACD,IAAAzB,EAAAJ,EAIK8B,EAAgBD,EAFtB3B,EAAS6B,IAAAA,eACP7B,EAAIE,KAAAA,MAAJ,uEAAAA,EAAA,cAAAL,EAAA,kBACAG,EAAI4B,mBAAgBD,WACJ1B,IAAVD,EAAMG,aACZ,MAAAH,EAASK,OAiBT,SAAkByB,EAAaF,GAChC,IAAAG,EAAAzB,EAAA,uBAIKE,EAAaF,EAAO,aAF1B0B,KAEE,IAAIxB,KAAAA,EACJwB,EAAIA,KAAeD,EAAnBzB,IAGE0B,IAKET,EALFS,EAAkBD,GAKW,YAF3BlB,EAAemB,EAAAA,aAGfb,EAAAA,WAAeX,GAIfyB,EAAYb,WAAWG,GADvBW,GAAYd,EAAWQ,GAA3BK,EAAA,IACIA,EAAYb,KAAWG,MAA3B,IAA2BA,GAA3B,IAEIY,EAAmBC,KAAKC,KAALF,GAEAC,IAAvBE,GAAA,IAA4BC,GAG1BC,SAASC,cAAc,iBAAmBtB,EAAauB,QAAQ,MAAO,IAAM,MAAMC,UAAUC,IAAI,eACjGJ,SAAAC,cAAA,iBAAAtB,EAAAuB,QAAA,MAAA,IAAA,+BAAApB,mBAAA,YAAAa,EAAA,KA3CGU,CAAJC,KAAyBC,MAAA/C,EAAMgD,UAAApB,GAE3BqB,QAAQ5C,IAAJ,gBAIHL,EAAAkD,OAmFNrB,CAAAV,EAAAI,GA1GKsB,CAAAA,KAAJE,MAAyB/C,EAAAgD,WAErBC,QAAO5C,IAAJ,gBAIFL,EAAAkD,OAhBR,IAAArD,EAAU,mBACT2C,SAAAW,iBAAA,uBAgHYC,QAAQ,SAASC,EAAMC,GAC/B9B,EAAW6B,EAAK5B,aAAa,kBAlHnC","file":"scripts.min.js","sourcesContent":["(function(){\n  'use strict';\n  const apikey = 'JC86LIY595WFPL8F';\n  const actionsLi = document.querySelectorAll('[data-js=\"actions\"]');\n  \n  function getActions(actions) {\n    let symbol = actions;\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('GET', `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=1min&apikey=${apikey}&datatype=json`);\n    xhr.onreadystatechange = () => {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200){\n          viewActions(JSON.parse(xhr.response));\n        }else{\n          console.log('deu errado');\n        }\n      }\n    }\n    xhr.send();\n  }\n\n  function getActionsClosePreviousDay(actions, closeDay){\n    let symbol = actions;\n    let valueCloseDay = closeDay;\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}.SA&apikey=${apikey}&datatype=json`);\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          closePreviousDay(JSON.parse(xhr.response), valueCloseDay);\n        } else {\n          console.log('deu errado');\n        }\n      }\n    }\n    xhr.send();\n  }\n\n  function generatesVariation(valueNew, valueOld) {\n    let newResult = parseFloat(valueNew);\n    let oldResult = parseFloat(valueOld);\n    let porcetagem = (((newResult - oldResult) / oldResult) * 100);\n    return Math.round(porcetagem * 100) / 100;\n  }\n\n  function closePreviousDay(result, valueCloseDay){\n    let resultsDaily = result[\"Time Series (Daily)\"];\n    let resultMeta = result[\"Meta Data\"];\n    let resultFinish = [];\n\n    for (result in resultsDaily) {\n      resultFinish.push(resultsDaily[result]);\n    }\n\n    let latestResult = resultFinish[0];\n\n    let resultClose = latestResult[\"4. close\"];\n    let resultSymbol = resultMeta[\"2. Symbol\"];\n\n    \n    let newResult = parseFloat(valueCloseDay);\n    let oldResult = parseFloat(resultClose);\n    let porcetagem = (((newResult - oldResult) / oldResult) * 100);\n    let porcetagemFinish = Math.round(porcetagem * 100) / 100;\n\n    let numberIsPositive = Math.sign(porcetagemFinish);\n\n    if(numberIsPositive === 1 || numberIsPositive === 0){\n      document.querySelector('[data-symbol=\"' + resultSymbol.replace('.SA', '') + '\"]').classList.add('is-positive');\n    }\n    \n    document.querySelector('[data-symbol=\"' + resultSymbol.replace('.SA', '') + '\"] .box-actions--percentage').insertAdjacentHTML('beforeend', porcetagemFinish + '%' );\n  }\n\n  function viewActions(result){\n    let resultsTimes = result[\"Time Series (1min)\"];\n    let resultMeta = result[\"Meta Data\"];\n    let resultsDetails = [];\n    let percentageResult;\n    let numberIsPositive;\n    let positiveOrNegativeClass;\n\n    for (result in resultsTimes) {\n      resultsDetails.push(resultsTimes[result]);\n    }\n    let latestResult = resultsDetails[0];\n    \n    let resultOpen = latestResult[\"1. open\"];\n    let resultHight = latestResult[\"2. high\"];\n    let resultLow = latestResult[\"3. low\"];\n    let resultClose = latestResult[\"4. close\"];\n    let resultVolume = latestResult[\"5. volume\"];\n    \n    let resultSymbol = resultMeta[\"2. Symbol\"];\n    let resultRefreshed = resultMeta[\"3. Last Refreshed\"];\n    \n    let viewHTML = `<div class=\"box-actions--symbol\"><span>Symbol</span> ${resultSymbol} / <div class=\"box-actions--percentage\"></div></div>\n          <div class=\"box-actions--refreshed\"><span>Last Refreshed:</span> ${resultRefreshed}</div>\n          <ul class=box-actions--values>\n            <li><span>Open:</span> ${parseFloat(resultOpen).toFixed(2)}</li>\n            <li><span>Close:</span> ${parseFloat(resultClose).toFixed(2)}</li>\n            <li><span>Hight:</span> ${parseFloat(resultHight).toFixed(2)}</li>\n            <li><span>Low:</span> ${parseFloat(resultLow).toFixed(2)}</li>\n            <li><span>Volume:</span> ${parseFloat(resultVolume).toFixed(2)}</li>\n          </ul>`;\n    \n    document.querySelector('[data-symbol=\"'+ resultSymbol +'\"]').insertAdjacentHTML('beforeend', viewHTML);\n\n    getActionsClosePreviousDay(resultSymbol, resultClose)\n    \n  }\n  function startAjax(){\n    actionsLi.forEach(function(item, index){\n      getActions(item.getAttribute('data-symbol'));\n    });\n  }\n  startAjax();\n})();\n"]}