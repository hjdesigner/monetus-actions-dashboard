{"version":3,"sources":["scripts.min.js"],"names":["symbols","actions","xhr","XMLHttpRequest","open","getActions","apikey","symbol","status","result","send","resultMeta","resultsDetails","resultsTimes","latestResult","push","resultHight","resultOpen","resultClose","resultVolume","resultSymbol","resultRefreshed","resultLow","startAjax","onreadystatechange","parse","response","console","main","document","querySelector","forEach","name"],"mappings":"cAAA,WAGE,SAAMA,EAAWC,GACjB,IAIMC,EAAM,IAAIC,eAFhBD,EAAAE,KAASC,MAAT,uEAA6BJ,EAA7B,cAA6BK,EAA7B,kBACEJ,EAAIK,mBAAJ,WACcJ,IAAVD,EAAAA,aACJ,MAAIE,EAAKI,OASR,SARDC,GASAP,IAAIQ,EAAJD,EAAA,uBACDE,EAAAF,EAAA,aACDG,KACE,IAAIC,KAAAA,EACJD,EAAiBH,KAAAA,EAAAA,IAEjB,IAAAK,EAAeD,EAAc,GAC3BD,EAAeG,EAAKF,WACrBG,EAAAF,EAAA,WACGA,EAAAA,EAAeF,UACfK,EAAaH,EAAa,YAC1BE,EAAcF,EAAa,aAE3BI,EAAcJ,EAAAA,aACdK,EAAeL,EAAa,qBAE5BM,EAAAA,4FACJA,EADIA,sFAKqEC,EALrED,wFAO6BH,EAP7BG,8CAeoBF,EAfpBE,8CAiBLJ,EAjBKI,4CAkBcE,EAlBdF,+CAmB0BD,EAnB1BC,wCAuBNG,EAAAA,mBAAAA,YAAAA,GAhDMC,CAAAA,KAAJC,MAAyBvB,EAAAwB,WAErBC,QAAOnB,IAAJ,gBAIFN,EAAAQ,OAhBR,IAAAJ,EAAU,mBACTN,GAAA,QAAA,SAAA,QAAA,QAAA,SAGI4B,EAAOC,SAASC,cAAc,uBAkDhC9B,EAAQ+B,QAAQ,SAASC,GACvB3B,EAAW2B,KAvDjB","file":"scripts.min.js","sourcesContent":["(function(){\n  'use strict';\n  const apikey = 'JC86LIY595WFPL8F';\n  const symbols = ['SLED4', 'PIBB11', 'NATU3', 'GRND3', 'CVCB3'];\n  let main = document.querySelector('[data-js=\"actions\"]');\n\n  function getActions(actions) {\n    var symbol = actions;\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${actions}.SA&apikey=${apikey}&datatype=json`);\n    xhr.onreadystatechange = () => {\n      if(xhr.readyState === 4){\n        if(xhr.status === 200){\n          viewActions(JSON.parse(xhr.response));\n        }else{\n          console.log('deu errado');\n        }\n      }\n    }\n    xhr.send();\n  }\n  function viewActions(result){\n    let resultsTimes = result[\"Time Series (Daily)\"];\n    let resultMeta = result[\"Meta Data\"];\n    let resultsDetails = [];\n    for (result in resultsTimes) {\n      resultsDetails.push(resultsTimes[result]);\n    }\n    let latestResult = resultsDetails[0];\n    let resultOpen = latestResult[\"1. open\"];\n    let resultHight = latestResult[\"2. high\"];\n    let resultLow = latestResult[\"3. low\"];\n    let resultClose = latestResult[\"4. close\"];\n    let resultVolume = latestResult[\"5. volume\"];\n\n    let resultSymbol = resultMeta[\"2. Symbol\"];\n    let resultRefreshed = resultMeta[\"3. Last Refreshed\"];\n    \n    let viewHTML = `<li class=\"box-actions\">\n          <div class=\"box-actions--symbol\"><span>Symbol</span> ${resultSymbol}</div>\n          <div class=\"box-actions--refreshed\"><span>Last Refreshed:</span> ${resultRefreshed}</div>\n          <ul class=box-actions--values>\n            <li><span>Open:</span> ${resultOpen}</li>\n            <li><span>Close:</span> ${resultClose}</li>\n            <li><span>Hight:</span> ${resultHight}</li>\n            <li><span>Low:</span> ${resultLow}</li>\n            <li><span>Volume:</span> ${resultVolume}</li>\n          </ul>\n        </li>`;\n    \n    main.insertAdjacentHTML('beforeend', viewHTML);\n    \n  }\n  function startAjax(){\n    symbols.forEach(function(name){\n      getActions(name);\n    });\n  }\n  startAjax();\n})();\n"]}